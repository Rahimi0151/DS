MERGE ( L1, L2 : LIST ) : LIST
{
    CREATE( L3 )

    p1 = FIRST(L1)
    p2 = FIRST(L2)

    while (p1 != NULL and p2 != NULL):
    {
        if RETRIEVE(L1, p1) > RETRIEVE(L2, p2):
            INSERT(L3, RETRIEVE(L2, p2))
            p1 = NEXT(L1, p1)
        else:
            INSERT(L3, RETRIEVE(L1, p1))
            p2 = NEXT(L2, p2)
    }

    if p1 == NULL:
        while p2 != NULL:
            INSERT(L3, RETRIEVE(L2, p2))
            p2 = NEXT(L2, p2)

    if p2 == NULL:
        while p1 != NULL:
            INSERT(L3, RETRIEVE(L1, p1))
            p1 = NEXT(L1, p1)
    
    return L3
}

CREATE( ref L : LIST ); 
EMPTY( L : LIST ) : boolean; 
MAKENULL( ref L : LIST ); 
FIRST( L : LIST ) : Position; 
NEXT( L : LIST; p : Position ) : Position; 
PREV( L : LIST; p : Position ) : Position; 
INSERT(ref L : LIST; p : Position; x: ElementType); 
DELETE( ref L : LIST; ref p : Position ); 
RETRIEVE( L : LIST; p : Position ) : ElementType; 